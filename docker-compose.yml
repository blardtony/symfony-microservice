services:
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./product-service:/var/www/html
    environment:
      - APP_ENV=dev
      - APP_SECRET=your_secret_here
      - USER_SERVICE_URL=http://user-service
      - RABBITMQ_HOST=rabbitmq
    networks:
      - product-service-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "81:80"
    volumes:
      - ./user-service:/var/www/html
    environment:
      - APP_ENV=dev
      - APP_SECRET=your_secret_here
      - DATABASE_URL=mysql://root:userservicepassword@user-database/user_service_db
    networks:
      - product-service-network
      - user-service-network

  user-database:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: userservicepassword
      MYSQL_DATABASE: user_service_db
    volumes:
      - user-database-data:/var/lib/mysql
    networks:
      - user-service-network
  rabbitmq:
    image: rabbitmq:4-management
    ports:
      - "5672:5672" # AMQP protocol port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - product-service-network
      - user-service-network

volumes:
  user-database-data:
  rabbitmq-data:

networks:
  product-service-network:
  user-service-network:
